{"version":3,"sources":["components/EmotionComponents.jsx","pages/LandingPage.jsx","components/Board.jsx","components/Popup.jsx","img/icons/replay.svg","img/icons/puzzle.svg","components/VictoryPopup.jsx","components/DefeatPopup.jsx","img/icons/eye.svg","components/ReferenceButton.jsx","context/ImageContext.js","model/ImageData.js","pages/PuzzlePage.jsx","components/PuzzleSizePopup.jsx","img/icons/search.svg","components/SearchBar.jsx","pages/BrowsePage.jsx","img/icons/photo.svg","pages/CustomPage.jsx","components/AppBar.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Main","main","Heading","h2","NewPuzzleButton","Link","ReplayButton","button","LandingPage","to","process","Board","isPlaying","onPuzzleComplete","onTileMove","columnCount","width","imagePath","useState","Array","keys","concat","tileValues","setTileValues","imgWidth","setImgWidth","imgHeight","setImgHeight","isShuffled","useRef","useEffect","setTimeout","newTileValues","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","img","Image","src","onload","height","handleTileClick","tileValue","index","current","checkAdjacentToNull","nullIndex","findIndex","value","handleTileAnimationComplete","isComplete","i","checkCompletion","puzzleTiles","map","backgroundSize","backgroundPositionX","backgroundPositionY","tileSize","tileStyle","css","key","flipId","onComplete","onClick","flipKey","Overlay","Container","visibleStyleOverlay","visibleStylePopup","Popup","visible","title","color","children","className","style","Message","ButtonContainer","VictoryPopup","moveCount","window","location","reload","replayIcon","alt","newPuzzleIcon","DefeatPopup","RefrenceButton","eyeIcon","ImageContext","React","createContext","changeImagePath","path","imageData","name","item","id","mainStyle","ButtonsContainer","PlayButton","GiveUpButton","PuzzlePage","victoryPopupVisible","setVictoryPopupVisible","defeatPopupVisible","setDefeatPopupVisible","setIsPlaying","setMoveCount","puzzleImagePath","setPuzzleImagePath","puzzleSize","setPuzzleSize","imagePathFromContext","useContext","ImageProvider","query","URLSearchParams","useLocation","search","history","useHistory","queryId","get","querySize","push","imageId","parseInt","image","find","data","Fragment","ReferenceButton","prevCount","CloseButton","Grid","Option","props","sizeStyle","difficultyStyle","PuzzleSizePopup","onClose","Form","form","InputField","input","SubmitButton","SearchBar","onSearch","inputText","setInputText","onSubmit","e","preventDefault","type","placeholder","onChange","event","target","searchIcon","Tile","BrowsePage","setImageId","sizePopupVisible","setSizePopupVisible","filteredImageData","setFilteredImageData","imgId","imgPath","onPuzzleClick","console","log","newImageData","filter","toLowerCase","includes","labelStyle","CustomPage","htmlFor","photoIcon","file","files","filePath","URL","createObjectURL","reader","FileReader","readAsDataURL","onInputChange","Header","header","Navigation","nav","AppBar","App","localStorage","getItem","setImagePath","contextState","newPath","setItem","Provider","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ca6a14b.chunk.js","sourcesContent":["/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: 1280px;\r\n\tpadding: 0 60px;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\trow-gap: 40px;\r\n\talign-items: center;\r\n\tpadding: 40px 0;\r\n`;\r\n\r\nexport const Heading = styled.h2`\r\n\ttext-align: center;\r\n\tcolor: #000;\r\n`;\r\n\r\nexport const NewPuzzleButton = styled(Link)`\r\n\tbackground: linear-gradient(to right, var(--orange), var(--yellow));\r\n\tborder-bottom: 4px solid rgba(0, 0, 0, 0.1);\r\n\tbox-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tcolumn-gap: 20px;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 10px 35px;\r\n\tcolor: #fff;\r\n\ttext-transform: uppercase;\r\n\tfont-weight: 700;\r\n\tfont-size: 1rem;\r\n\r\n\t& img {\r\n\t\theight: 20px;\r\n\t}\r\n`;\r\n\r\nexport const ReplayButton = styled.button`\r\n\tbackground: linear-gradient(to right, var(--blue), var(--green));\r\n\tborder-bottom: 4px solid rgba(0, 0, 0, 0.1);\r\n\tbox-shadow: 0px 4px 16px rgba(0, 0, 0, 0.15);\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tcolumn-gap: 20px;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 10px 35px;\r\n\tcolor: #fff;\r\n\ttext-transform: uppercase;\r\n\tfont-weight: 700;\r\n\tfont-size: 1rem;\r\n\r\n\t& img {\r\n\t\theight: 20px;\r\n\t}\r\n`;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Wrapper, Main } from \"../components/EmotionComponents\";\r\n\r\nconst LandingPage = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Main>\r\n\t\t\t\t<h2>Sliding puzzles for everyone - beginner to advanced.</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/browse`}>Browse puzzles</Link>\r\n\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/custom`}>\r\n\t\t\t\t\t\tCreate custom puzzle\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Main>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default LandingPage;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\n\r\nconst Board = ({\r\n\tisPlaying,\r\n\tonPuzzleComplete,\r\n\tonTileMove,\r\n\tcolumnCount,\r\n\twidth,\r\n\timagePath,\r\n}) => {\r\n\tconst [tileValues, setTileValues] = useState(\r\n\t\t[...Array(columnCount * columnCount - 1).keys()].concat([null])\r\n\t);\r\n\tconst [imgWidth, setImgWidth] = useState(0);\r\n\tconst [imgHeight, setImgHeight] = useState(0);\r\n\r\n\tconst isShuffled = useRef(false);\r\n\r\n\t// Shuffle tiles after one second\r\n\tuseEffect(() => {\r\n\t\tif (isPlaying === false) return;\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet newTileValues = [...tileValues];\r\n\t\t\tnewTileValues = shuffle(newTileValues);\r\n\t\t\t//newTileValues = [0, 1, 2, 3, 4, 5, 6, null, 7];\r\n\t\t\tsetTileValues(newTileValues);\r\n\t\t}, 1000);\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isPlaying]);\r\n\r\n\t// Load image and get its dimensions\r\n\tuseEffect(() => {\r\n\t\tvar img = new Image();\r\n\r\n\t\timg.src = imagePath;\r\n\r\n\t\timg.onload = function () {\r\n\t\t\tsetImgWidth(img.width);\r\n\t\t\tsetImgHeight(img.height);\r\n\t\t};\r\n\t}, [imagePath]);\r\n\r\n\t// On click move the tile if adjacent to empty slot\r\n\tconst handleTileClick = (tileValue, index) => {\r\n\t\tif (isShuffled.current === true) {\r\n\t\t\tconst isAdjacent = checkAdjacentToNull(tileValues, columnCount, index);\r\n\r\n\t\t\tif (isAdjacent) {\r\n\t\t\t\tlet newTileValues = [...tileValues];\r\n\t\t\t\tconst nullIndex = newTileValues.findIndex((value) => value == null);\r\n\t\t\t\tnewTileValues[nullIndex] = tileValue;\r\n\t\t\t\tnewTileValues[index] = null;\r\n\r\n\t\t\t\tsetTileValues(newTileValues);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// After tile animation, check if puzzle is complete\r\n\tconst handleTileAnimationComplete = () => {\r\n\t\tif (isShuffled.current === false) {\r\n\t\t\tisShuffled.current = true;\r\n\t\t} else {\r\n\t\t\tonTileMove();\r\n\t\t}\r\n\t\tconst isPuzzleComplete = checkCompletion(tileValues);\r\n\t\tif (isPuzzleComplete) {\r\n\t\t\tonPuzzleComplete();\r\n\t\t}\r\n\t};\r\n\r\n\tconst puzzleTiles = tileValues.map((tileValue, index) => {\r\n\t\tconst tileSize = width / columnCount;\r\n\r\n\t\tlet backgroundSize, backgroundPositionX, backgroundPositionY;\r\n\t\tif (imgWidth / imgHeight >= 1) {\r\n\t\t\tbackgroundSize = `auto ${tileSize * columnCount}px`; // auto = imgWidth / imgHeight * tileSize * columnCount\r\n\t\t\tbackgroundPositionX =\r\n\t\t\t\t((imgWidth / imgHeight) * tileSize * columnCount) / 2 +\r\n\t\t\t\t(tileSize * columnCount) / 2 -\r\n\t\t\t\t(tileValue % columnCount) * tileSize +\r\n\t\t\t\t\"px\";\r\n\t\t\tbackgroundPositionY =\r\n\t\t\t\t-Math.floor(tileValue / columnCount) * tileSize + \"px\";\r\n\t\t} else {\r\n\t\t\tbackgroundSize = `${tileSize * columnCount}px auto`; // auto = imgWidth / imgHeight * tileSize * columnCount\r\n\t\t\tbackgroundPositionX = -(tileValue % columnCount) * tileSize + \"px\";\r\n\t\t\tbackgroundPositionY =\r\n\t\t\t\t((imgHeight / imgWidth) * tileSize * columnCount) / 2 +\r\n\t\t\t\t(tileSize * columnCount) / 2 -\r\n\t\t\t\tMath.floor(tileValue / columnCount) * tileSize +\r\n\t\t\t\t\"px\";\r\n\t\t}\r\n\r\n\t\tconst tileStyle = css`\r\n\t\t\twidth: ${tileSize}px;\r\n\t\t\theight: ${tileSize}px;\r\n\t\t\tbackground-image: ${tileValue == null ? `none` : `url(\"${imagePath}\")`};\r\n\t\t\tbackground-size: /*auto ${tileSize * columnCount}px*/ ${backgroundSize};\r\n\t\t\tbackground-position-x: /* calc(\r\n\t\t\t\t${((imgWidth / imgHeight) * tileSize * columnCount) / 2}px +\r\n\t\t\t\t\t${tileSize * columnCount}px / 2 -\r\n\t\t\t\t\t${(tileValue % columnCount) * tileSize}px\r\n\t\t\t) */ ${backgroundPositionX};\r\n\t\t\tbackground-position-y: ${backgroundPositionY};\r\n\t\t\tcursor: pointer;\r\n\t\t\tz-index: ${tileValue == null ? `-1` : `1`};\r\n\t\t`;\r\n\r\n\t\treturn (\r\n\t\t\t<Flipped\r\n\t\t\t\tkey={tileValue}\r\n\t\t\t\tflipId={tileValue}\r\n\t\t\t\tonComplete={handleTileAnimationComplete}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tcss={tileStyle}\r\n\t\t\t\t\tonClick={() => handleTileClick(tileValue, index)}\r\n\t\t\t\t></div>\r\n\t\t\t</Flipped>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Flipper\r\n\t\t\tflipKey={tileValues}\r\n\t\t\tcss={css`\r\n\t\t\t\twidth: ${width}px;\r\n\t\t\t\theight: ${width}px;\r\n\t\t\t\tdisplay: grid;\r\n\t\t\t\tgrid-template-columns: repeat(${columnCount}, 1fr);\r\n\t\t\t`}\r\n\t\t>\r\n\t\t\t{puzzleTiles}\r\n\t\t</Flipper>\r\n\t);\r\n};\r\n\r\nfunction shuffle(array) {\r\n\tvar currentIndex = array.length,\r\n\t\ttemporaryValue,\r\n\t\trandomIndex;\r\n\r\n\t// While there remain elements to shuffle...\r\n\twhile (0 !== currentIndex) {\r\n\t\t// Pick a remaining element...\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\r\n\t\t// And swap it with the current element.\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\nfunction checkAdjacentToNull(array, columnCount, index) {\r\n\t// Check left adjacency\r\n\tif (\r\n\t\tindex > 0 &&\r\n\t\t(index - 1) % columnCount !== columnCount - 1 &&\r\n\t\tarray[index - 1] == null\r\n\t) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Check right adjacency\r\n\tif (\r\n\t\tindex < columnCount * columnCount &&\r\n\t\t(index + 1) % columnCount !== 0 &&\r\n\t\tarray[index + 1] == null\r\n\t)\r\n\t\treturn true;\r\n\r\n\t// Check up adjacency\r\n\tif (Math.floor(index / columnCount) > 0 && array[index - columnCount] == null)\r\n\t\treturn true;\r\n\r\n\t// Check down adjacency\r\n\tif (\r\n\t\tMath.floor(index / columnCount) < columnCount - 1 &&\r\n\t\tarray[index + columnCount] == null\r\n\t) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nfunction checkCompletion(array) {\r\n\tlet isComplete = true;\r\n\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tif (\r\n\t\t\t(array[i] > array[i + 1] && array[i + 1] !== null) ||\r\n\t\t\t(i !== array.length - 1 && array[i] == null)\r\n\t\t) {\r\n\t\t\tisComplete = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isComplete;\r\n}\r\n\r\nexport default Board;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\nconst Popup = ({ visible, title, color = \"#000\", children }) => {\r\n\treturn (\r\n\t\t<Overlay css={visible ? visibleStyleOverlay : null}>\r\n\t\t\t<Container css={visible ? visibleStylePopup : null}>\r\n\t\t\t\t<p className=\"title\" style={{ color: color }}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</p>\r\n\t\t\t\t{children}\r\n\t\t\t</Container>\r\n\t\t</Overlay>\r\n\t);\r\n};\r\n\r\nconst Overlay = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.6);\r\n\ttransition: all 0.2s ease;\r\n\tz-index: 10;\r\n\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tposition: relative;\r\n\ttop: -100vh;\r\n\tpadding: 60px 100px 30px;\r\n\tmin-width: 600px;\r\n\tbackground-color: #eee;\r\n\tborder: 8px solid #fff;\r\n\tborder-radius: 40px;\r\n\ttransition: all 0.2s ease;\r\n\r\n\t.title {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 10px 0px;\r\n\t\twidth: 60%;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 50px;\r\n\t\tfont-weight: 800;\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n\r\nconst visibleStyleOverlay = css`\r\n\tvisibility: visible;\r\n\topacity: 1;\r\n`;\r\n\r\nconst visibleStylePopup = css`\r\n\ttop: 0;\r\n`;\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/replay.31cfa7e3.svg\";","export default __webpack_public_path__ + \"static/media/puzzle.eda1095a.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\nimport Popup from \"./Popup\";\r\nimport { NewPuzzleButton, ReplayButton } from \"./EmotionComponents\";\r\n\r\nimport replayIcon from \"../img/icons/replay.svg\";\r\nimport newPuzzleIcon from \"../img/icons/puzzle.svg\";\r\n\r\nconst VictoryPopup = ({ visible, moveCount }) => {\r\n\tconst handleReplayClick = () => {\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popup visible={visible} title=\"Good job!\" color=\"var(--orange)\">\r\n\t\t\t<Message>Puzzle completed in {moveCount} moves</Message>\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<ReplayButton onClick={handleReplayClick}>\r\n\t\t\t\t\t<span>Shuffle and play again</span>\r\n\t\t\t\t\t<img src={replayIcon} alt=\"\" />\r\n\t\t\t\t</ReplayButton>\r\n\t\t\t\t<NewPuzzleButton to={`/browse`}>\r\n\t\t\t\t\t<span>Play another puzzle</span>\r\n\t\t\t\t\t<img src={newPuzzleIcon} alt=\"\" />\r\n\t\t\t\t</NewPuzzleButton>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Popup>\r\n\t);\r\n};\r\n\r\nconst Message = styled.p`\r\n\tfont-weight: bold;\r\n\tmargin-bottom: 20px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\trow-gap: 10px;\r\n`;\r\n\r\nexport default VictoryPopup;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\nimport Popup from \"./Popup\";\r\nimport { NewPuzzleButton, ReplayButton } from \"./EmotionComponents\";\r\n\r\nimport replayIcon from \"../img/icons/replay.svg\";\r\nimport newPuzzleIcon from \"../img/icons/puzzle.svg\";\r\n\r\nconst DefeatPopup = ({ visible, moveCount }) => {\r\n\tconst handleReplayClick = () => {\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Popup visible={visible} title=\"Too bad!\" color=\"var(--red)\">\r\n\t\t\t<ButtonContainer>\r\n\t\t\t\t<ReplayButton onClick={handleReplayClick}>\r\n\t\t\t\t\t<span>Shuffle and play again</span>\r\n\t\t\t\t\t<img src={replayIcon} alt=\"\" />\r\n\t\t\t\t</ReplayButton>\r\n\t\t\t\t<NewPuzzleButton to={`${process.env.PUBLIC_URL}/browse`}>\r\n\t\t\t\t\t<span>Play another puzzle</span>\r\n\t\t\t\t\t<img src={newPuzzleIcon} alt=\"\" />\r\n\t\t\t\t</NewPuzzleButton>\r\n\t\t\t</ButtonContainer>\r\n\t\t</Popup>\r\n\t);\r\n};\r\n\r\nconst ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\trow-gap: 10px;\r\n`;\r\n\r\nexport default DefeatPopup;\r\n","export default __webpack_public_path__ + \"static/media/eye.cd0228c4.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport eyeIcon from \"../img/icons/eye.svg\";\r\n\r\nconst RefrenceButton = ({ imagePath }) => {\r\n\tconst Container = styled.div`\r\n\t\tposition: relative;\r\n\t\tdisplay: grid;\r\n\t\tplace-items: center;\r\n\t\twidth: 35px;\r\n\t\theight: 35px;\r\n\t\tborder-radius: 100%;\r\n\t\tborder: 1px solid #333;\r\n\t\tjustify-self: end;\r\n\r\n\t\timg {\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t}\r\n\r\n\t\t::after {\r\n\t\t\tcontent: \"\";\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: -210px;\r\n\t\t\tright: -180px;\r\n\t\t\twidth: 200px;\r\n\t\t\theight: 200px;\r\n\t\t\tbackground-image: url(\"${imagePath}\");\r\n\t\t\tbackground-size: cover;\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tbackground-position: center;\r\n\t\t\tborder: 4px solid #fff;\r\n\t\t\tbox-shadow: 0px 8px 32px rgba(0, 0, 0, 0.25);\r\n\t\t\ttransform-origin: top left;\r\n\t\t\ttransform: scale(0);\r\n\t\t\ttransition: all 0.2s ease;\r\n\t\t\tz-index: 5;\r\n\t\t}\r\n\r\n\t\t:hover::after {\r\n\t\t\ttransform: scale(1);\r\n\t\t}\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<img src={eyeIcon} alt=\"reference\" />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default RefrenceButton;\r\n","import React from \"react\";\r\n\r\nconst ImageContext = React.createContext({\r\n\timagePath: null,\r\n\tchangeImagePath: () => {},\r\n});\r\n\r\nexport default ImageContext;\r\n","const path = `${process.env.PUBLIC_URL}/images/`;\r\n\r\nconst imageData = [\r\n\t{\r\n\t\tname: \"Synthwave City\",\r\n\t\tpath: path + \"synthwave-city.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Synthwave Skyline\",\r\n\t\tpath: path + \"synthwave-skyline.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Neon Pyramids\",\r\n\t\tpath: path + \"desert.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Watchtower\",\r\n\t\tpath: path + \"tower.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Oriental Aurora\",\r\n\t\tpath: path + \"aurora-oriental.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Neon Astronaut\",\r\n\t\tpath: path + \"astronaut.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Forest Temple\",\r\n\t\tpath: path + \"forest-temple.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Otherworld Moutains\",\r\n\t\tpath: path + \"mountains.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Neon Ring\",\r\n\t\tpath: path + \"neon-ring.png\",\r\n\t},\r\n\t{\r\n\t\tname: \"Serene Sunset\",\r\n\t\tpath: path + \"sunset.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Black Hole\",\r\n\t\tpath: path + \"black hole.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"City Drive\",\r\n\t\tpath: path + \"city drive.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Colorful Mountains\",\r\n\t\tpath: path + \"colorful mountains.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Forest Sunset\",\r\n\t\tpath: path + \"forest sunset.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Moon City\",\r\n\t\tpath: path + \"moon city.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Morning Mountains\",\r\n\t\tpath: path + \"morning mountains.jpg\",\r\n\t},\r\n\t{\r\n\t\tname: \"Saturn\",\r\n\t\tpath: path + \"saturn.jpg\",\r\n\t},\r\n].map((item, index) => {\r\n\titem.id = index;\r\n\treturn item;\r\n});\r\n\r\nexport default imageData;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport Board from \"../components/Board\";\r\nimport VictoryPopup from \"../components/VictoryPopup\";\r\nimport DefeatPopup from \"../components/DefeatPopup\";\r\nimport ReferenceButton from \"../components/ReferenceButton\";\r\n\r\nimport ImageProvider from \"../context/ImageContext\";\r\n\r\nimport imageData from \"../model/ImageData\";\r\n\r\nfunction useQuery() {\r\n\treturn new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst PuzzlePage = () => {\r\n\tconst [victoryPopupVisible, setVictoryPopupVisible] = useState(false);\r\n\tconst [defeatPopupVisible, setDefeatPopupVisible] = useState(false);\r\n\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\tconst [moveCount, setMoveCount] = useState(0);\r\n\tconst [puzzleImagePath, setPuzzleImagePath] = useState(null);\r\n\tconst [puzzleSize, setPuzzleSize] = useState(null);\r\n\r\n\tlet imagePathFromContext = useContext(ImageProvider).imagePath;\r\n\r\n\tconst query = useQuery();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst queryId = query.get(\"id\");\r\n\t\tconst querySize = query.get(\"size\");\r\n\r\n\t\tif (!queryId) return history.push(\"/\");\r\n\t\tif (!querySize) return history.push(\"/\");\r\n\r\n\t\tconst imageId = queryId;\r\n\t\tconst puzzleSize = parseInt(querySize);\r\n\r\n\t\tif (puzzleSize < 3 || puzzleSize > 5) return history.push(\"/\");\r\n\r\n\t\tif (imageId === \"custom\") {\r\n\t\t\tsetPuzzleImagePath(imagePathFromContext);\r\n\t\t} else {\r\n\t\t\tlet image = imageData.find((data) => data.id === parseInt(imageId));\r\n\t\t\tif (!image) return history.push(\"/\");\r\n\t\t\tsetPuzzleImagePath(image.path);\r\n\t\t}\r\n\r\n\t\tsetPuzzleSize(puzzleSize);\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst handleTileMove = () => {\r\n\t\tsetMoveCount((prevCount) => prevCount + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main css={mainStyle}>\r\n\t\t\t{puzzleSize === null || puzzleImagePath === null ? null : (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ButtonsContainer>\r\n\t\t\t\t\t\t{isPlaying ? (\r\n\t\t\t\t\t\t\t<GiveUpButton onClick={() => setDefeatPopupVisible(true)}>\r\n\t\t\t\t\t\t\t\tGive up\r\n\t\t\t\t\t\t\t</GiveUpButton>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<PlayButton onClick={() => setIsPlaying(true)}>Play</PlayButton>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<ReferenceButton imagePath={puzzleImagePath} />\r\n\t\t\t\t\t</ButtonsContainer>\r\n\t\t\t\t\t<Board\r\n\t\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\t\tonPuzzleComplete={() => setVictoryPopupVisible(true)}\r\n\t\t\t\t\t\tonTileMove={handleTileMove}\r\n\t\t\t\t\t\tcolumnCount={parseInt(puzzleSize)}\r\n\t\t\t\t\t\twidth={480}\r\n\t\t\t\t\t\timagePath={puzzleImagePath}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t\t<VictoryPopup visible={victoryPopupVisible} moveCount={moveCount} />\r\n\t\t\t<DefeatPopup visible={defeatPopupVisible} />\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nconst mainStyle = css`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\tpadding: 60px;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n\twidth: 480px;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 1fr 1fr;\r\n\talign-items: center;\r\n\tmargin-bottom: 30px;\r\n`;\r\n\r\nconst PlayButton = styled.button`\r\n\tpadding: 10px 30px;\r\n\tbackground-color: var(--blue);\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tjustify-self: center;\r\n\tgrid-column: 2;\r\n`;\r\n\r\nconst GiveUpButton = styled.button`\r\n\tpadding: 10px 30px;\r\n\tbackground-color: var(--red);\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\tjustify-self: center;\r\n\tgrid-column: 2;\r\n`;\r\n\r\nexport default PuzzlePage;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Popup from \"./Popup\";\r\n\r\nconst PuzzleSizePopup = ({ visible, onClose, imageId }) => {\r\n\treturn (\r\n\t\t<Popup visible={visible} title=\"Select puzzle size\">\r\n\t\t\t<CloseButton onClick={onClose} />\r\n\t\t\t<Grid>\r\n\t\t\t\t<Option\r\n\t\t\t\t\tto={`${process.env.PUBLIC_URL}/puzzle?id=${imageId}&size=3`}\r\n\t\t\t\t\tcolor=\"var(--yellow)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<p css={sizeStyle}>3x3</p>\r\n\t\t\t\t\t<p css={difficultyStyle}>easy</p>\r\n\t\t\t\t</Option>\r\n\t\t\t\t<Option\r\n\t\t\t\t\tto={`${process.env.PUBLIC_URL}/puzzle?id=${imageId}&size=4`}\r\n\t\t\t\t\tcolor=\"var(--orange)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<p css={sizeStyle}>4x4</p>\r\n\t\t\t\t\t<p css={difficultyStyle}>medium</p>\r\n\t\t\t\t</Option>\r\n\t\t\t\t<Option\r\n\t\t\t\t\tto={`${process.env.PUBLIC_URL}/puzzle?id=${imageId}&size=5`}\r\n\t\t\t\t\tcolor=\"var(--red)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<p css={sizeStyle}>5x5</p>\r\n\t\t\t\t\t<p css={difficultyStyle}>hard</p>\r\n\t\t\t\t</Option>\r\n\t\t\t</Grid>\r\n\t\t</Popup>\r\n\t);\r\n};\r\n\r\nconst CloseButton = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\ttransform: translate(50%, -50%);\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tbackground-color: var(--red);\r\n\tborder-radius: 100%;\r\n\tcolor: #fff;\r\n\tcursor: pointer;\r\n\r\n\t::after {\r\n\t\tcontent: \"x\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 25px;\r\n\t}\r\n`;\r\n\r\nconst Grid = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tcolumn-gap: 20px;\r\n`;\r\n\r\nconst Option = styled(Link)`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 160px;\r\n\theight: 160px;\r\n\tbackground-color: #fff;\r\n\tborder-radius: 100%;\r\n\tbox-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n\tuser-select: none;\r\n\tcursor: pointer;\r\n\toverflow: hidden;\r\n\ttransition: all 0.15s ease;\r\n\tz-index: 1;\r\n\r\n\t::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 0px;\r\n\t\theight: 0px;\r\n\t\tbackground-color: ${(props) => props.color};\r\n\t\tborder-radius: 100%;\r\n\t\ttransition: all 0.2s ease;\r\n\t\tz-index: -1;\r\n\t}\r\n\r\n\t:hover {\r\n\t\tcolor: #fff;\r\n\r\n\t\t::before {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst sizeStyle = css`\r\n\tfont-size: 2rem;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst difficultyStyle = css`\r\n\tposition: absolute;\r\n\tbottom: 10px;\r\n\tfont-size: 1.1rem;\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nexport default PuzzleSizePopup;\r\n","export default __webpack_public_path__ + \"static/media/search.314599d3.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useState } from \"react\";\r\n\r\nimport searchIcon from \"../img/icons/search.svg\";\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n\tconst [inputText, setInputText] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={(e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tonSearch(inputText);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<InputField\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search puzzles...\"\r\n\t\t\t\tonChange={(event) => setInputText(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<SubmitButton type=\"submit\">\r\n\t\t\t\t<img src={searchIcon} alt=\"search\" />\r\n\t\t\t</SubmitButton>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst Form = styled.form`\r\n\tdisplay: flex;\r\n\tbox-shadow: 0px 4px 16px rgba(0, 0, 0, 0.1);\r\n\tborder-radius: 100px;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n\tpadding: 0px 20px;\r\n\twidth: 250px;\r\n\theight: 40px;\r\n\tfont-size: 1rem;\r\n\tborder-radius: 100px 0 0 100px;\r\n\toutline: none;\r\n\tborder: none;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n\tposition: relative;\r\n\theight: 40px;\r\n\twidth: 60px;\r\n\tfont-size: 1rem;\r\n\r\n\tborder: none;\r\n\tbackground-color: var(--blue);\r\n\r\n\timg {\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\twidth: 25px;\r\n\t\theight: 25px;\r\n\t}\r\n`;\r\n\r\nexport default SearchBar;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { Wrapper, Main, Heading } from \"../components/EmotionComponents\";\r\nimport PuzzleSizePopup from \"../components/PuzzleSizePopup\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nimport imageData from \"../model/ImageData\";\r\n\r\nconst BrowsePage = () => {\r\n\tconst [imageId, setImageId] = useState(null);\r\n\tconst [sizePopupVisible, setSizePopupVisible] = useState(false);\r\n\tconst [filteredImageData, setFilteredImageData] = useState(imageData);\r\n\r\n\tconst onPuzzleClick = (imgId) => {\r\n\t\tsetImageId(imgId);\r\n\t\tsetSizePopupVisible(true);\r\n\t};\r\n\r\n\tconst handleSearchBarSubmit = (query) => {\r\n\t\tconsole.log(\"SSearch for \" + query);\r\n\r\n\t\tconst newImageData = imageData.filter((data) =>\r\n\t\t\tdata.name.toLowerCase().includes(query.toLowerCase())\r\n\t\t);\r\n\t\tsetFilteredImageData(newImageData);\r\n\t};\r\n\r\n\tuseEffect(() => {}, [filteredImageData]);\r\n\r\n\tconst puzzleTiles = filteredImageData.map((data) => {\r\n\t\tconst TileComponent = ({ title, imgId, imgPath, id }) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Tile onClick={() => onPuzzleClick(imgId)}>\r\n\t\t\t\t\t<img src={imgPath} alt={title} />\r\n\t\t\t\t\t<p>{title}</p>\r\n\t\t\t\t</Tile>\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<TileComponent\r\n\t\t\t\ttitle={data.name}\r\n\t\t\t\timgPath={data.path}\r\n\t\t\t\tkey={data.name}\r\n\t\t\t\timgId={data.id}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Main>\r\n\t\t\t\t<Heading>Browse puzzles</Heading>\r\n\t\t\t\t<SearchBar onSearch={handleSearchBarSubmit} />\r\n\t\t\t\t<Grid>{puzzleTiles}</Grid>\r\n\t\t\t\t<PuzzleSizePopup\r\n\t\t\t\t\tvisible={sizePopupVisible}\r\n\t\t\t\t\tonClose={() => setSizePopupVisible(false)}\r\n\t\t\t\t\timageId={imageId}\r\n\t\t\t\t/>\r\n\t\t\t</Main>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst Grid = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(3, 200px);\r\n\trow-gap: 60px;\r\n\tcolumn-gap: 50px;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Tile = styled.div`\r\n\tposition: relative;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 200px;\r\n\ttext-align: center;\r\n\tborder: 8px solid #fff;\r\n\tbox-shadow: 0 4px 32px rgba(0, 0, 0, 0.15);\r\n\ttransition: transform 0.5s ease, top 0.2s ease-in;\r\n\r\n\t:hover {\r\n\t\ttransform: scale(1.02) rotate(2deg);\r\n\t\ttop: -6px;\r\n\t}\r\n\r\n\timg,\r\n\tp {\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tobject-fit: cover;\r\n\t}\r\n\r\n\tp {\r\n\t\tposition: absolute;\r\n\t\tfont-weight: 600;\r\n\t\tcolor: #333;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 100px;\r\n\t\tpadding: 8px 15px;\r\n\t\tmin-width: 80%;\r\n\t\tleft: 50%;\r\n\t\tbottom: 0;\r\n\t\ttransform: translate(-50%, 50%);\r\n\t\tbox-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\r\n\t}\r\n`;\r\n\r\nexport default BrowsePage;\r\n","export default __webpack_public_path__ + \"static/media/photo.a721c474.svg\";","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx, css } from \"@emotion/react\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport { Wrapper, Main, Heading } from \"../components/EmotionComponents\";\r\nimport PuzzleSizePopup from \"../components/PuzzleSizePopup\";\r\n\r\nimport ImageContext from \"../context/ImageContext\";\r\n\r\nimport photoIcon from \"../img/icons/photo.svg\";\r\n\r\nconst CustomPage = () => {\r\n\tconst [sizePopupVisible, setSizePopupVisible] = useState(false);\r\n\r\n\tconst changeImagePath = useContext(ImageContext).changeImagePath;\r\n\r\n\tconst onInputChange = (event) => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\tconst filePath = URL.createObjectURL(event.target.files[0]);\r\n\r\n\t\tconsole.log(filePath);\r\n\r\n\t\tlet reader = new FileReader();\r\n\r\n\t\treader.onload = (e) => {\r\n\t\t\tchangeImagePath(filePath);\r\n\t\t\tsetSizePopupVisible(true);\r\n\t\t};\r\n\r\n\t\treader.readAsDataURL(file);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Main>\r\n\t\t\t\t<Heading>Choose a photo and play</Heading>\r\n\t\t\t\t<label htmlFor=\"uploadImageInput\" css={labelStyle}>\r\n\t\t\t\t\t<img src={photoIcon} alt=\"upload\" />\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tid=\"uploadImageInput\"\r\n\t\t\t\t\tonChange={(event) => onInputChange(event)}\r\n\t\t\t\t/>\r\n\t\t\t\t<PuzzleSizePopup\r\n\t\t\t\t\tvisible={sizePopupVisible}\r\n\t\t\t\t\tonClose={() => setSizePopupVisible(false)}\r\n\t\t\t\t\timageId=\"custom\"\r\n\t\t\t\t/>\r\n\t\t\t</Main>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst labelStyle = css`\r\n\tdisplay: inline-block;\r\n\tbackground-color: #eee;\r\n\tpadding: 80px;\r\n\tcursor: pointer;\r\n\r\n\t:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 60px;\r\n\t}\r\n`;\r\n\r\nexport default CustomPage;\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Wrapper } from \"./EmotionComponents\";\r\n\r\nconst AppBar = () => {\r\n\treturn (\r\n\t\t<Header>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<Navigation>\r\n\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}`}>\r\n\t\t\t\t\t\t<h1>Sliding puzzles</h1>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/browse`}>Browse</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to={`${process.env.PUBLIC_URL}/custom`}>\r\n\t\t\t\t\t\t\t\tCreate custom puzzle\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</Navigation>\r\n\t\t\t</Wrapper>\r\n\t\t</Header>\r\n\t);\r\n};\r\n\r\nconst Header = styled.header`\r\n\twidth: 100%;\r\n\tpadding: 15px 0px;\r\n\tbackground-color: #fff;\r\n\tbox-shadow: 0px 4px 16px rgba(0, 0, 0, 0.1);\r\n\tborder-bottom: 3px solid var(--main-gradient);\r\n`;\r\n\r\nconst Navigation = styled.nav`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\r\n\th1 {\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tcolumn-gap: 40px;\r\n\t}\r\n`;\r\n\r\nexport default AppBar;\r\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport LandingPage from \"./pages/LandingPage\";\nimport PuzzlePage from \"./pages/PuzzlePage\";\nimport BrowsePage from \"./pages/BrowsePage\";\nimport CustomPage from \"./pages/CustomPage\";\n\nimport AppBar from \"./components/AppBar\";\n\nimport ImageContext from \"./context/ImageContext\";\n\nfunction App() {\n\tconst [imagePath, setImagePath] = useState(\n\t\tlocalStorage.getItem(\"customImagePath\")\n\t);\n\n\tconst changeImagePath = (newPath) => {\n\t\tsetImagePath(newPath);\n\t\tlocalStorage.setItem(\"customImagePath\", newPath);\n\t};\n\n\tconst contextState = {\n\t\timagePath,\n\t\tchangeImagePath,\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<ImageContext.Provider value={contextState}>\n\t\t\t\t<AppBar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={`${process.env.PUBLIC_URL}/puzzle`}\n\t\t\t\t\t\tcomponent={PuzzlePage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={`${process.env.PUBLIC_URL}/browse`}\n\t\t\t\t\t\tcomponent={BrowsePage}\n\t\t\t\t\t></Route>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={`${process.env.PUBLIC_URL}/custom`}\n\t\t\t\t\t\tcomponent={CustomPage}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath={`${process.env.PUBLIC_URL}/`}\n\t\t\t\t\t\tcomponent={LandingPage}\n\t\t\t\t\t></Route>\n\t\t\t\t</Switch>\n\t\t\t</ImageContext.Provider>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}